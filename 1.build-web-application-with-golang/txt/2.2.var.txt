1.定义变量
//定义一个名称为variableName，类型为type的变量
var variableName type

2.定义多个变量
//定义三个类型都是type的变量
var vname1, vname2, vname3 type

3.定义变量并初始化值
//初始化variableName的变量为value值，类型是type
var variableName type = value

4.同时初始化多个变量
/*
定义三个类型都是"type"的变量,并且分别初始化为相应的值
vname1为v1，vname2为v2，vname3为v3
*/
var vname1, vname2, vname3 type= v1, v2, v3

5.改进:同时初始化多个变量
/*
定义三个变量，它们分别初始化为相应的值
vname1为v1，vname2为v2，vname3为v3
然后Go会根据其相应值的类型来帮你初始化它们
*/
var vname1, vname2, vname3 = v1, v2, v3

6.继续简化:同时初始化多个变量
/*
定义三个变量，它们分别初始化为相应的值
vname1为v1，vname2为v2，vname3为v3
编译器会根据初始化的值自动推导出相应的类型
-------------------------------------------------------------
非常简洁了？:=这个符号直接取代了var和type,这种形式叫做简短声明。
不过它有一个限制，那就是它只能用在函数内部；
在函数外部使用则会无法编译通过，所以一般用var方式来定义全局变量。
*/
vname1, vname2, vname3 := v1, v2, v3

7.下划线:
_（下划线）是个特殊的变量名，任何赋予它的值都会被丢弃。在这个例子中，我们将值35赋予b，并同时丢弃34：
_, b := 34, 35


8.Go对于已声明但未使用的变量会在编译阶段报错，比如下面的代码就会产生一个错误：声明了i但未使用。
package main

func main() {
	var i int
}

